{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\artur\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\TCC\\\\volt-react-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{CopyToClipboard}from'react-copy-to-clipboard';import{Card,Button,Tooltip,OverlayTrigger}from'@themesberg/react-bootstrap';import Highlight,{Prism}from'prism-react-renderer';import themeStyle from\"../assets/syntax-themes/ghcolors.json\";export default(function(props){var _props$code=props.code,code=_props$code===void 0?\"\":_props$code,_props$language=props.language,language=_props$language===void 0?\"jsx\":_props$language;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),copied=_useState2[0],setCopied=_useState2[1];var handleCopy=function handleCopy(){setCopied(true);setTimeout(function(){return setCopied(false);},2000);};var CodeStyling=function CodeStyling(_ref){var className=_ref.className,style=_ref.style,tokens=_ref.tokens,getLineProps=_ref.getLineProps,getTokenProps=_ref.getTokenProps;return/*#__PURE__*/React.createElement(Card,{className:\"position-relative pe-8 mb-2\"},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(\"pre\",{className:className,style:style},tokens.map(function(line,i){return/*#__PURE__*/React.createElement(\"div\",getLineProps({line:line,key:i}),line.map(function(token,key){return/*#__PURE__*/React.createElement(\"span\",getTokenProps({token:token,key:key}));}));})),copied?/*#__PURE__*/React.createElement(\"span\",{className:\"text-success copy-code-text\"},\"Copied\"):null,/*#__PURE__*/React.createElement(OverlayTrigger,{trigger:['hover','focus'],placement:\"top\",overlay:/*#__PURE__*/React.createElement(Tooltip,null,\"Copy to clipboard\")},/*#__PURE__*/React.createElement(CopyToClipboard,{text:code,onCopy:handleCopy},/*#__PURE__*/React.createElement(Button,{size:\"sm\",variant:\"primary\",className:\"copy-code-button\"},\"Copy\")))));};return/*#__PURE__*/React.createElement(Highlight,{Prism:Prism,code:code,language:language,theme:themeStyle},CodeStyling);});","map":{"version":3,"sources":["C:/Users/artur/OneDrive/Área de Trabalho/TCC/volt-react-dashboard/src/components/Code.js"],"names":["React","useState","CopyToClipboard","Card","Button","Tooltip","OverlayTrigger","Highlight","Prism","themeStyle","props","code","language","copied","setCopied","handleCopy","setTimeout","CodeStyling","className","style","tokens","getLineProps","getTokenProps","map","line","i","key","token"],"mappings":"sMACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,eAAT,KAAgC,yBAAhC,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,OAAvB,CAAgCC,cAAhC,KAAsD,6BAAtD,CACA,MAAOC,CAAAA,SAAP,EAAoBC,KAApB,KAAiC,sBAAjC,CAEA,MAAOC,CAAAA,UAAP,KAAuB,uCAAvB,CAEA,eAAe,SAACC,KAAD,CAAW,CACxB,gBAAwCA,KAAxC,CAAQC,IAAR,CAAQA,IAAR,sBAAe,EAAf,6BAAwCD,KAAxC,CAAmBE,QAAnB,CAAmBA,QAAnB,0BAA8B,KAA9B,iBACA,cAA4BX,QAAQ,CAAC,KAAD,CAApC,wCAAOY,MAAP,eAAeC,SAAf,eAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvBD,SAAS,CAAC,IAAD,CAAT,CACAE,UAAU,CAAC,iBAAMF,CAAAA,SAAS,CAAC,KAAD,CAAf,EAAD,CAAyB,IAAzB,CAAV,CACD,CAHD,CAKA,GAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,UAAGC,CAAAA,SAAH,MAAGA,SAAH,CAAcC,KAAd,MAAcA,KAAd,CAAqBC,MAArB,MAAqBA,MAArB,CAA6BC,YAA7B,MAA6BA,YAA7B,CAA2CC,aAA3C,MAA2CA,aAA3C,oBAClB,oBAAC,IAAD,EAAM,SAAS,CAAC,6BAAhB,eACE,oBAAC,IAAD,CAAM,IAAN,mBACE,2BAAK,SAAS,CAAEJ,SAAhB,CAA2B,KAAK,CAAEC,KAAlC,EACGC,MAAM,CAACG,GAAP,CAAW,SAACC,IAAD,CAAOC,CAAP,qBACV,0BAASJ,YAAY,CAAC,CAAEG,IAAI,CAAJA,IAAF,CAAQE,GAAG,CAAED,CAAb,CAAD,CAArB,CACGD,IAAI,CAACD,GAAL,CAAS,SAACI,KAAD,CAAQD,GAAR,qBAAgB,2BAAUJ,aAAa,CAAC,CAAEK,KAAK,CAALA,KAAF,CAASD,GAAG,CAAHA,GAAT,CAAD,CAAvB,CAAhB,EAAT,CADH,CADU,EAAX,CADH,CADF,CASGb,MAAM,cAAG,4BAAM,SAAS,CAAC,6BAAhB,WAAH,CAAiE,IAT1E,cAWE,oBAAC,cAAD,EACE,OAAO,CAAE,CAAC,OAAD,CAAU,OAAV,CADX,CAEE,SAAS,CAAC,KAFZ,CAGE,OAAO,cAAE,oBAAC,OAAD,0BAHX,eAKE,oBAAC,eAAD,EAAiB,IAAI,CAAEF,IAAvB,CAA6B,MAAM,CAAEI,UAArC,eACE,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,OAAO,CAAC,SAA1B,CAAoC,SAAS,CAAC,kBAA9C,SADF,CALF,CAXF,CADF,CADkB,EAApB,CA0BA,mBACE,oBAAC,SAAD,EAAW,KAAK,CAAEP,KAAlB,CAAyB,IAAI,CAAEG,IAA/B,CAAqC,QAAQ,CAAEC,QAA/C,CAAyD,KAAK,CAAEH,UAAhE,EACGQ,WADH,CADF,CAKD,CAxCD","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { Card, Button, Tooltip, OverlayTrigger } from '@themesberg/react-bootstrap';\r\nimport Highlight, { Prism } from 'prism-react-renderer';\r\n\r\nimport themeStyle from \"../assets/syntax-themes/ghcolors.json\";\r\n\r\nexport default (props) => {\r\n  const { code = \"\", language = \"jsx\" } = props;\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const handleCopy = () => {\r\n    setCopied(true);\r\n    setTimeout(() => setCopied(false), 2000);\r\n  };\r\n\r\n  const CodeStyling = ({ className, style, tokens, getLineProps, getTokenProps }) => (\r\n    <Card className=\"position-relative pe-8 mb-2\">\r\n      <Card.Body>\r\n        <pre className={className} style={style}>\r\n          {tokens.map((line, i) => (\r\n            <div {...getLineProps({ line, key: i })}>\r\n              {line.map((token, key) => <span {...getTokenProps({ token, key })} />)}\r\n            </div>\r\n          ))}\r\n        </pre>\r\n\r\n        {copied ? <span className=\"text-success copy-code-text\">Copied</span> : null}\r\n\r\n        <OverlayTrigger\r\n          trigger={['hover', 'focus']}\r\n          placement=\"top\"\r\n          overlay={<Tooltip>Copy to clipboard</Tooltip>}\r\n        >\r\n          <CopyToClipboard text={code} onCopy={handleCopy}>\r\n            <Button size=\"sm\" variant=\"primary\" className=\"copy-code-button\">Copy</Button>\r\n          </CopyToClipboard>\r\n        </OverlayTrigger>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Highlight Prism={Prism} code={code} language={language} theme={themeStyle}>\r\n      {CodeStyling}\r\n    </Highlight>\r\n  );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}